Index: Game/src/main/kotlin/viewModel/EnemyGameController.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package viewModel\r\n\r\nimport client.NetworkClient\r\nimport javafx.application.Platform\r\nimport javafx.scene.control.Alert\r\nimport kotlinx.coroutines.DelicateCoroutinesApi\r\nimport kotlinx.coroutines.GlobalScope\r\nimport kotlinx.coroutines.delay\r\nimport kotlinx.coroutines.launch\r\nimport model.CityModel\r\nimport model.data.GameState\r\nimport tornadofx.Controller\r\nimport tornadofx.alert\r\nimport tornadofx.runLater\r\nimport view.EnemyMapView\r\nimport view.SaveRatingView\r\n\r\n\r\nclass EnemyGameController(\r\n    private val moneyController: MoneyController,\r\n    private val cityController: CityController,\r\n    private val ratingController: RatingController,\r\n    private val cityModel: CityModel,\r\n    private val victoryController: VictoryController\r\n) : Controller() {\r\n\r\n    private var mapView: EnemyMapView? = null\r\n    fun setMapView(mapView: EnemyMapView) {\r\n        this.mapView = mapView\r\n    }\r\n\r\n    private val networkClient = NetworkClient()\r\n    private var gameId = 1\r\n\r\n    init {\r\n        gameId = 1\r\n    }\r\n    private var isGameOn = true\r\n\r\n\r\n    @OptIn(DelicateCoroutinesApi::class)\r\n    fun startPeriodicGameStateUpdates() {\r\n        isGameOn = true\r\n\r\n        GlobalScope.launch {\r\n            while (!victoryController.getFinished()) {\r\n                receiveGameState()\r\n                delay(400)\r\n            }\r\n            receiveGameState()\r\n\r\n        }\r\n    }\r\n\r\n    private var previousGameState: GameState? = null\r\n\r\n\r\n\r\n    @OptIn(DelicateCoroutinesApi::class)\r\n    private fun receiveGameState() {\r\n        GlobalScope.launch {\r\n            val gameState = networkClient.getOpponentState()\r\n\r\n            if (gameState != null) {\r\n                println(\"Received game state: $gameState\")\r\n\r\n                Platform.runLater {\r\n\r\n                    isGameOn = gameState.isGameOn\r\n\r\n                    moneyController.setMoney(gameState.moneyAmount)\r\n                    cityController.setHealth(gameState.cityHealth)\r\n                    ratingController.setRating(gameState.rating)\r\n\r\n                    previousGameState?.let { prevGameState ->\r\n                        val currentMobIds = gameState.mobs.map { it.id }.toSet()\r\n                        prevGameState.mobs.forEach { mob ->\r\n                            if (mob.id !in currentMobIds) {\r\n                                mapView?.deleteMobFromMap(mob.row, mob.col)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    // TODO clear old?\r\n                    for (mob in gameState.mobs) {\r\n                        mapView?.addMob(mob)\r\n                    }\r\n                    for (tower in gameState.towers) {\r\n                        mapView?.addTower(tower)\r\n                    }\r\n\r\n                    previousGameState = gameState\r\n\r\n                }\r\n\r\n                if (!gameState.isGameOn) {\r\n                    victoryController.setEnemyGameOver(true)\r\n                    victoryController.setEnemyCityHealth(gameState.cityHealth)\r\n                    victoryController.setEnemyRating(gameState.rating)\r\n                    val result = victoryController.check()\r\n                    /*\r\n                    if (result != \"nothing\") {\r\n\r\n                        when (result) {\r\n                            \"victory\" -> showNameInputView(\"Congratulations! You won!\")\r\n                            \"lose\" -> showNameInputView(\"Ooops... You lost!\")\r\n                            else -> showNameInputView(\"Hmmmm... It's a draw!\")\r\n                        }\r\n                    }*/\r\n                }\r\n            } else {\r\n                println(\"Failed to receive game state\")\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    @OptIn(DelicateCoroutinesApi::class)\r\n    private fun showNameInputView(message: String) {\r\n        val totalMoneySpent = moneyController.getMoneySpent()\r\n\r\n        find<SaveRatingView>().apply {\r\n            setResultMessage(\"$message\\nTotal Money Spent: $totalMoneySpent\")\r\n            this.onSave = { name ->\r\n                GlobalScope.launch {\r\n                    networkClient.addToRating(\r\n                        name = \"Cool\",\r\n                        result = ratingController.getRating(),\r\n                        player = name\r\n                    )\r\n                }\r\n                find<SaveRatingView>().apply {\r\n                    setResultMessage(\"$message\\nTotal Money Spent: $totalMoneySpent\\nRating saved for $name.\")\r\n                }\r\n            }\r\n\r\n            openModal(block = true)\r\n        }\r\n    }\r\n\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Game/src/main/kotlin/viewModel/EnemyGameController.kt b/Game/src/main/kotlin/viewModel/EnemyGameController.kt
--- a/Game/src/main/kotlin/viewModel/EnemyGameController.kt	(revision f024d3d638c1fe106764f41dd81f36bd34b7c7ba)
+++ b/Game/src/main/kotlin/viewModel/EnemyGameController.kt	(date 1719228480000)
@@ -94,19 +94,21 @@
                 }
 
                 if (!gameState.isGameOn) {
-                    victoryController.setEnemyGameOver(true)
-                    victoryController.setEnemyCityHealth(gameState.cityHealth)
-                    victoryController.setEnemyRating(gameState.rating)
-                    val result = victoryController.check()
-                    /*
-                    if (result != "nothing") {
+                    runLater {
+                        victoryController.setEnemyGameOver(true)
+                        victoryController.setEnemyCityHealth(gameState.cityHealth)
+                        victoryController.setEnemyRating(gameState.rating)
+                        val result = victoryController.check()
+
+                        if (result != "nothing") {
 
-                        when (result) {
-                            "victory" -> showNameInputView("Congratulations! You won!")
-                            "lose" -> showNameInputView("Ooops... You lost!")
-                            else -> showNameInputView("Hmmmm... It's a draw!")
+                            when (result) {
+                                "victory" -> showNameInputView("Congratulations! You won!")
+                                "lose" -> showNameInputView("Ooops... You lost!")
+                                else -> showNameInputView("Hmmmm... It's a draw!")
+                            }
                         }
-                    }*/
+                    }
                 }
             } else {
                 println("Failed to receive game state")
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1e09c9c2-b4c3-4346-a7e5-f6580d5d9454\" name=\"Changes\" comment=\"\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;mkrikunov&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/ploddasha/TowerDefenceGameEngine.git&quot;,\r\n    &quot;accountId&quot;: &quot;4c9fdba7-9d2d-415c-a6b7-688995eb8a85&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 8\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2hrwkyxiGcETdpWh4ILQpB0F2Ig\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;dart.analysis.tool.window.visible&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;master&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;D:/TowerDefenceGameEngine&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"Babashka\" factoryName=\"BabashkaLocalRepl\" activateToolWindowBeforeRun=\"false\">\r\n      <setting name=\"displayName\" value=\"\" />\r\n      <setting name=\"bbPath\" value=\"\" />\r\n      <setting name=\"parameters\" value=\"\" />\r\n      <option name=\"PARENT_ENVS\" value=\"true\" />\r\n      <setting name=\"workingDir\" value=\"\" />\r\n      <setting name=\"focusEditor\" value=\"false\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"ClojureREPL\" factoryName=\"Local\" activateToolWindowBeforeRun=\"false\">\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"ClojureREPL\" factoryName=\"Remote\" activateToolWindowBeforeRun=\"false\">\r\n      <setting name=\"displayName\" value=\"\" />\r\n      <setting name=\"host\" value=\"\" />\r\n      <setting name=\"port\" value=\"0\" />\r\n      <setting name=\"replType\" value=\"SOCKET\" />\r\n      <setting name=\"configType\" value=\"SPECIFY\" />\r\n      <setting name=\"replPortFileType\" value=\"STANDARD\" />\r\n      <setting name=\"customPortFile\" value=\"\" />\r\n      <setting name=\"fixLineNumbers\" value=\"false\" />\r\n      <setting name=\"focusEditor\" value=\"false\" />\r\n      <setting name=\"urlFile\" value=\"\" />\r\n      <method v=\"2\" />\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"TowerDefenceGameEngine\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"TowerDefenceGameEngine\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"TORNADOFX_RUNCONFIGURATION\" run-type=\"App\" live-views=\"false\" live-stylesheets=\"false\" dump-stylesheets=\"false\">\r\n      <module name=\"TowerDefenceGameEngine\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1e09c9c2-b4c3-4346-a7e5-f6580d5d9454\" name=\"Changes\" comment=\"\" />\r\n      <created>1718365651954</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1718365651954</updated>\r\n      <workItem from=\"1718365652676\" duration=\"289000\" />\r\n      <workItem from=\"1718784029043\" duration=\"67000\" />\r\n      <workItem from=\"1718940274194\" duration=\"8000\" />\r\n      <workItem from=\"1718951071686\" duration=\"23000\" />\r\n      <workItem from=\"1719133866034\" duration=\"68000\" />\r\n      <workItem from=\"1719134517465\" duration=\"26000\" />\r\n      <workItem from=\"1719222768855\" duration=\"4277000\" />\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f024d3d638c1fe106764f41dd81f36bd34b7c7ba)
+++ b/.idea/workspace.xml	(date 1719228828000)
@@ -6,6 +6,7 @@
   <component name="ChangeListManager">
     <list default="true" id="1e09c9c2-b4c3-4346-a7e5-f6580d5d9454" name="Changes" comment="">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Game/src/main/kotlin/viewModel/EnemyGameController.kt" beforeDir="false" afterPath="$PROJECT_DIR$/Game/src/main/kotlin/viewModel/EnemyGameController.kt" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -115,7 +116,7 @@
       <workItem from="1718951071686" duration="23000" />
       <workItem from="1719133866034" duration="68000" />
       <workItem from="1719134517465" duration="26000" />
-      <workItem from="1719222768855" duration="4277000" />
+      <workItem from="1719222768855" duration="4913000" />
     </task>
     <servers />
   </component>
